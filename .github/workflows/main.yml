name: CI

on:
  push:
#    tags: v[0-9]+.[0-9]+.[0-9]+
    branches: master

env:
  GITHUB_DOCKER_HUB: ghcr.io
  BASE_IMAGE_NAME: tcommerce-web-admin
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_LOGIN }}/${IMAGE_NAME}
  GITHUB_DOCKER_IMAGE_NAME: ${GITHUB_DOCKER_HUB}/${{ secrets.GHCR_DOCKER_USERNAME }}/${IMAGE_NAME}

jobs:
  build-push:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Log into Docker registry
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
        echo "${{ secrets.GHCR_PAT }}" | docker login ${GITHUB_DOCKER_HUB} -u ${{ secrets.GHCR_DOCKER_USERNAME }} --password-stdin

    - name: Pull images
      run: |
        docker pull ${GITHUB_DOCKER_IMAGE_NAME}:builder || true
        docker pull ${GITHUB_DOCKER_IMAGE_NAME}:latest || true

    - name: Build images (multistage)
      run: |
        echo ${GITHUB_DOCKER_IMAGE_NAME}
        docker build \
          --target builder \
          --cache-from ${GITHUB_DOCKER_IMAGE_NAME}:builder \
          -t ${GITHUB_DOCKER_IMAGE_NAME}:builder \
          .
#        docker build \
#          --cache-from ${GITHUB_DOCKER_IMAGE_NAME}:latest \
#          --cache-from ${GITHUB_DOCKER_IMAGE_NAME}:builder \
#          -t ${DOCKER_IMAGE_NAME}:latest \
#          .

    - name: Push images
      run: |
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        docker tag ${DOCKER_IMAGE_NAME}:latest ${DOCKER_IMAGE_NAME}:${VERSION} ${GITHUB_DOCKER_IMAGE_NAME}:latest

        docker push ${GITHUB_DOCKER_IMAGE_NAME}:builder
        docker push ${GITHUB_DOCKER_IMAGE_NAME}:latest
        docker push ${DOCKER_IMAGE_NAME}:latest
        docker push ${DOCKER_IMAGE_NAME}:${VERSION}

  deploy:
    needs: build-push

    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          passphrase: ${{ secrets.SERVER_SSH_PRIVATE_KEY_PASSPHRASE }}
          script: |
            manage-docker pull-restart admin prod
